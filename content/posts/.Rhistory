paste('hello','world','!',sep = '_')
## [1] "hello_world_!"
paste(c('A','B','C'),c(1,2,3)) #两个或者更多字符串对象根据元素对应关系拼接到一起，如果想用‘-’连接起来
paste(c('A','B','C'),c(1,2,3),sep = '-')
## [1] "A-1" "B-2" "C-3"
#此外需要注意的是如果传入的两个或多个对象的长度不一样，对应关系会发生变化，比如
paste(c('A','B','C','D','E'),c(1,2),sep = '-')
## [1] "A-1" "B-2" "C-1" "D-2" "E-1"
paste(1:10)
#一个字符串连接在一起，这第三种需求与上面很大的不同在于上面两种需求传入的都是多个对象，
#而第三种需求在函数的第一个参数位置上只传入一个对象，如果需要用‘~’连接
paste(1:10, collapse = '~')
females_raw = read_excel(
path = system.file(package="ScPoEconometrics",
"datasets","demo_gind.xls"),
sheet="Data", # which sheet
range="A141:K200",  # which excel cell range to read
na=":" )   # missing data indicator
setwd("~/Dropbox/GitHub/academic-kickstart/content/posts")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, dpi=300)
rm(list=ls())
ex_list = list(
a = c(1, 2, 3, 4),
b = TRUE,
c = "Hello!",
d = function(arg = 42) {print("Hello World!")},
e = diag(5)
)
ex_list[1] #returns a list contain the first element.
ex_list[[1]] #returns the first element of the list, in this case, a vector
example_data = data.frame(x = c(1, 3, 5, 7, 9, 1, 3, 5, 7, 9),
y = c(rep("Hello", 9), "Goodbye"),
z = rep(c(TRUE, FALSE), 5))
# 安装包所在的位置的数据
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
example_data_from_disk = read.csv(path) #read csv 是常用的读取data frame 用的
str(mtcars)
#To quickly obtain a vector of the variable names, we use the names() function.
names(mtcars)
#Subsetting data frames can work much like subsetting matrices using square brackets, [ , ]
mtcars[mtcars$mpg > 20, c("cyl", "disp", "wt")] #多个条件并列
table(mpg$drv)
library(ggplot2)
mpg$cty
table(mpg$drv)
# output the observation numbers of each species
table(mpg$drv)/nrow(mpg)
#output the percent of each category; nrow is the sum of obs
layout(matrix(c(1,2,3,4),nr=2,byrow=T))
hist(mpg$cty,
xlab   = "Miles Per Gallon (City)",
main   = "Histogram of MPG (City)", # main title
breaks = 12,   # how many breaks?
col    = "blue",
border = "black")
barplot(table(mpg$drv),
xlab   = "Drivetrain (f = FWD, r = RWD, 4 = 4WD)",
ylab   = "Frequency",
main   = "Drivetrains",
col    = "blue",
border = "black")
#However, more often we will use boxplots to compare a numerical variable
#for different values of a categorical variable.
boxplot(hwy ~ drv, data = mpg,
xlab   = "Drivetrain (f = FWD, r = RWD, 4 = 4WD)",
ylab   = "Miles Per Gallon (Highway)",
main   = "MPG (Highway) vs Drivetrain",
pch    = 20,
cex    = .5,
col    = "blue",
border = "black") #y~x
plot(hwy ~ displ, data = mpg,
xlab = "Engine Displacement (in Liters)",
ylab = "Miles Per Gallon (Highway)",
main = "MPG (Highway) vs Engine Displacement",
pch  = 20, # 点的形状
cex  = .5, # 越小点和文字越小
col  = "blue")
# plot draws the scatter plots with y against x
ggplot(data = mpg, aes(x=displ,y=hwy)) +   # ggplot() makes base plot
geom_point(color="blue",size=2) +     # how to show x and y? #geom_boxplot
ylab("Miles Per Gallon (Highway)") +  # name of y axis
xlab("Engine Displacement (in Liters)") + # x axis
theme_bw() +    # change the background
geom_smooth(method = "loess",se=TRUE)+
ggtitle("MPG (Highway) vs Engine Displacement")   # add a title
library(readr)  # you need `install.packages("readr")` once!
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
example_data_from_disk = read_csv(path)
library(readr)  # you need `install.packages("readr")` once!
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
#subset
mpg[mpg$hwy>35,c("manufacturer","model","year")]
# another way
subset(mpg, subset = hwy > 35, select = c("manufacturer", "model", "year"))
# another way
library(dplyr)
mpg%>%filter(hwy>35)%>%
select(manufacturer, model, year)
library(readxl)  # load the library
# Notice that if you installed the R package of this book,
# you have the .xls data file already at
# `system.file(package="ScPoEconometrics",
#                        "datasets","demo_gind.xls")`
# otherwise:
# * download the file to your computer
# * change the argument `path` to where you downloaded it
# you may want to change your working directory with `setwd("your/directory")
# or in RStudio by clicking Session > Set Working Directory
# total population in raw format
tot_pop_raw = read_excel(
path = system.file(package="ScPoEconometrics",
"datasets","demo_gind.xls"),
sheet="Data", # which sheet
range="A9:K68")  # which excel cell range to read
# Notice that if you installed the R package of this book,
# you have the .xls data file already at
# `system.file(package="ScPoEconometrics",
#                        "datasets","demo_gind.xls")`
# otherwise:
# * download the file to your computer
# * change the argument `path` to where you downloaded it
# you may want to change your working directory with `setwd("your/directory")
# or in RStudio by clicking Session > Set Working Directory
library(ScPoApps)
packageVersion("ScPoApps")
# total population in raw format
tot_pop_raw = read_excel(
path = system.file(package="ScPoEconometrics",
"datasets","demo_gind.xls"),
sheet="Data", # which sheet
range="A9:K68")  # which excel cell range to read
females_raw = read_excel(
path = system.file(package="ScPoEconometrics",
"datasets","demo_gind.xls"),
sheet="Data", # which sheet
range="A141:K200",  # which excel cell range to read
na=":" )   # missing data indicator
merge_GER <- tot_pop %>%
# 1. subset to countries of interest
filter(
Country %in%
c("France",
"United Kingdom",
"Italy")
) %>%
# 2. group data by year
group_by(year) %>%
# 3. add GER's count as new column *by year*
left_join(
# Germany only
filter(tot_pop,
Country %in% "Germany including former GDR"),
# join back in `by year`
by="year")
data("wage1", package = "wooldridge")   # load data
install.packages("wooldridge")
data("wage1", package = "wooldridge")   # load data
# a function that returns a plot
plotfun <- function(wage1,log=FALSE,rug = TRUE){#指定两个变量log rug作为test expression
y = wage1$wage
if (log){#false
y = log(wage1$wage)
}
plot(y = y,
x = wage1$educ,
col = "red", pch = 21, bg = "grey",
cex=1.25, xaxt="n", frame = FALSE,      # set default x-axis to none
main = ifelse(log,"log(Wages) vs. Education, 1976","Wages vs. Education, 1976"),
xlab = "years of education",
ylab = ifelse(log,"Log Hourly wages","Hourly wages"))
axis(side = 1, at = c(0,6,12,18))         # add custom ticks to x axis
if (rug) rug(wage1$wage, side=2, col="red")        # add `rug` to y axis
}
par(mfcol = c(2,1))  # set up a plot with 2 panels
# plot 1: standard scatter plot
plotfun(wage1)
# plot 2: add a panel with histogram+density
hist(wage1$wage,prob = TRUE, col = "grey", border = "red",
main = "Histogram of wages and Density",xlab = "hourly wage")
lines(density(wage1$wage), col = "black", lw = 2)
hourly_wage <- lm(formula = wage ~ educ, data = wage1)
#update lm的名称
log_hourly_wage = update(hourly_wage, log(wage) ~ ., data = wage1)
par(mfrow=c(1,2))
plotfun(wage1,rug=FALSE)
abline(hourly_wage,col="black",lw=2)
plotfun(wage1,log=TRUE,rug = FALSE) #因为前面定义了初始状态下log rug两个参数的T/F，可以在这从新给定
abline(log_hourly_wage, col="black",lw=2)
data("ceosal1", package = "wooldridge")
par(mfrow = c(1,2))
plot(salary ~ sales, data = ceosal1, main = "Sales vs Salaries",xaxt = "n",frame = FALSE)
#xaxt means there is no x-axis/frame 画框
axis(1, at = c(0,40000, 80000)) # add axis in x-side 3:upper 4:right
rug(ceosal1$salary,side = 2)
rug(ceosal1$sales,side = 1)
plot(log(salary) ~ log(sales), data = ceosal1, main = "Log(Sales) vs Log(Salaries)")
rug(log(ceosal1$salary),side = 2)
rug(log(ceosal1$sales),side = 1)
educ_only <- lm(lwage ~ educ                 , data = wage1)
educ_exper <- lm(lwage ~ educ + exper        , data = wage1)
log_wages <- lm(lwage ~ educ + exper + tenure, data = wage1)
stargazer::stargazer(educ_only, educ_exper, log_wages,type="html")
data("wage1",package = "wooldridge")
library(patchwork)
p1<-wage1 %>% ggplot(aes(x=educ,y=lwage,color=as.factor(female),group=(as.factor(female))))+
geom_point(size=1 ,shape=1)+geom_smooth(method="lm",se=T)
p2<-wage1 %>% ggplot(mapping=aes(x=educ,y=lwage))+geom_point(size=1)+geom_smooth(method="lm",se=T)
p1|p2
library("dplyr")
library("nycflights13")
library("AER") # Applied Econometrics with R
library("stargazer")
daily <- flights %>%
filter(origin == "EWR") %>%
group_by(year, month, day) %>%
summarise(delay = mean(dep_delay, na.rm = TRUE))
daily_weather <- weather %>%
filter(origin == "EWR") %>%
group_by(year, month, day) %>%
summarise(temp   = mean(temp, na.rm = TRUE),
wind   = mean(wind_speed, na.rm = TRUE),
precip = sum(precip, na.rm = TRUE))
# Merge flights with weather data frames
both <- daily %>%
inner_join(y = daily_weather, by = c("year", "month", "day")) %>%
data.frame()  # Temporary fix
# Create an indicator for quarter 学习一下
both$quarter <- cut(both$month, breaks = c(0, 3, 6, 9, 12),
labels = c("1", "2", "3", "4"))
# Create a vector of class logical
both$hot <- as.logical(both$temp > 85)
head(both)
stargazer(both, type = "html") #对于dataframe
library(tidyverse)
library(moderndive)
library(skimr)
library(ISLR)
evals_ch6 <- evals %>%
select(ID, score, age, gender)
evals_ch6 %>% select(score, age, gender) %>% skim() #skim 很好用
ggplot(evals_ch6, aes(x = age, y = score, color = gender)) +
geom_point() +
labs(x = "Age", y = "Teaching Score", color = "Gender") +
geom_smooth(method = "loess", se = T)+theme_bw()
ggplot(evals_ch6, aes(x = age, y = score, color = gender)) +
geom_point() +
labs(x = "Age", y = "Teaching Score", color = "Gender") +
geom_smooth(method = "lm", se = T)+theme_bw()+facet_wrap(~gender)
# select 后面直接跟变量名
library(ISLR)
credit_ch6 <- Credit %>% as_tibble() %>%
select(ID, debt = Balance, credit_limit = Limit,
income = Income, credit_rating = Rating, age = Age)
library(xtable)
library(PoEdata)
install.packages("PoEdata")
install_git("https://github.com/ccolonescu/PoEdata")
install.packages("devtools")  # if not already installed
library(devtools)
install_git("https://github.com/ccolonescu/PoEdata")
library(xtable)
library(PoEdata)
library(knitr)
data("food")
alpha <- 0.05 # chosen significance level
mod1 <- lm(food_exp~income, data=food)
b2 <- coef(mod1)[[2]]
df <- df.residual(mod1) # degrees of freedom
smod1 <- summary(mod1)
seb2 <- coef(smod1)[2,2] # se(b2)
tc <- qt(1-alpha/2, df) # quantile
lowb <- b2-tc*seb2  # lower bound
upb <- b2+tc*seb2   # upper bound
ci<-confint(mod1)
print(ci)
lowb_b2 <- ci[2, 1] # lower bound
upb_b2 <- ci[2, 2]  # upper bound.
data("andy",package="PoEdata")
mod1 <- lm(sales~price+advert, data=andy)
smod1 <- data.frame(xtable(summary(mod1)))
kable(smod1,
caption="The basic multiple regression model",
col.names=c("coefficient", "Std. Error", "t-value", "p-value"),
align="c", digits=3)
library(effects)
effprice <- effect("price", mod1)
plot(effprice)
alleffandy <- allEffects(mod1)
plot(alleffandy)
anova(mod1) #analysis of variance
rm(list=ls()) #Removes all items in Environment!
library(AER) #for `ivreg()`
library(lmtest) #for `coeftest()` and `bptest()`.
library(broom) #for `glance(`) and `tidy()`
library(PoEdata) #for PoE4 datasets
library(car) #for `hccm()` robust standard errors
library(sandwich)
library(knitr) #for making neat tables with `kable()`
library(stargazer)
data("mroz", package="PoEdata")
mroz1 <- mroz[mroz$lfp==1,] #restricts sample to lfp=1
educ.ols <- lm(educ~exper+I(exper^2)+mothereduc, data=mroz1)
kable(tidy(educ.ols), digits=4, align='c',caption=
"First stage in the 2SLS model for the 'wage' equation")
educHat <- fitted(educ.ols)
wage.2sls <- lm(log(wage)~educHat+exper+I(exper^2), data=mroz1)
kable(tidy(wage.2sls), digits=4, align='c',caption=
"Second stage in the 2SLS model for the 'wage' equation")
data("mroz", package="PoEdata")
mroz1 <- mroz[mroz$lfp==1,] #restricts sample to lfp=1.
mroz1.ols <- lm(log(wage)~educ+exper+I(exper^2), data=mroz1)
mroz1.iv <- ivreg(log(wage)~educ+exper+I(exper^2)|
exper+I(exper^2)+mothereduc, data=mroz1)
mroz1.iv1 <- ivreg(log(wage)~educ+exper+I(exper^2)|
exper+I(exper^2)+mothereduc+fathereduc,
data=mroz1)
stargazer(mroz1.ols, wage.2sls, mroz1.iv, mroz1.iv1,
title="Wage equation: OLS, 2SLS, and IV models compared",
header=FALSE,
type="html", # "html" or "latex" (in index.Rmd)
keep.stat="n",  # what statistics to print
omit.table.layout="n",
star.cutoffs=NA,
digits=4,
#  single.row=TRUE,
intercept.bottom=FALSE, #moves the intercept coef to top
column.labels=c("OLS","2SLS", "IV",
"IV +fathereduc")) #supresses the stars)
rm(list=ls()) #Removes all items in Environment!
library(plm)
library(tseries) # for `adf.test()`
library(dynlm) #for function `dynlm()`
library(vars) # for function `VAR()`
library(nlWaldTest) # for the `nlWaldtest()` function
library(lmtest) #for `coeftest()` and `bptest()`.
library(broom) #for `glance(`) and `tidy()`
library(PoEdata) #for PoE4 datasets
library(car) #for `hccm()` robust standard errors
library(sandwich)
library(knitr) #for `kable()`
library(forecast)
library(systemfit)
library(AER)
library(xtable)
library(xtable)
data("nls_panel", package="PoEdata")
nlspd <- pdata.frame(nls_panel, index=c("id", "year")) #set time and id
smpl <- nlspd[nlspd$id %in% c(1,2),c(1:6, 14:15)]
tbl <- xtable(smpl)
kable(tbl, digits=4, align="c",
caption="A data sample")
pdim(nlspd) # examine the balance
nls10 <- pdata.frame(nls_panel[nls_panel$id %in% 1:10,]) # set panel data
wage.fixed <- lm(lwage~exper+I(exper^2)+
tenure+I(tenure^2)+union+factor(id),
data=nls10)
kable(tidy(wage.fixed), digits=3,
caption="Fixed effects in a subsample")
wage.within <- plm(lwage~exper+I(exper^2)+
tenure+I(tenure^2)+south+union,
data=nlspd,
model="within")
tbl <- tidy(wage.within)
kable(tbl, digits=3, caption=
"Fixed effects using 'within' with full sample")
kable(tidy(pFtest(wage.within, wage.pooled)), caption=
"Fixed effects test: Ho:'No fixed effects'")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, dpi=300)
rm(list=ls())
library()
d = 1:16
d3 = array(data = d,dim = c(4,2,2)) # d3 是四行两列，然后有两页
d4 = array(data = d,dim = c(4,2,2,3))  # will recycle 1:16
d3
#Similary, d4 would have two pages, and another 3 registers in a fourth dimension
ex_list = list(
a = c(1, 2, 3, 4),
b = TRUE,
c = "Hello!",
d = function(arg = 42) {print("Hello World!")},
e = diag(5)
)
ex_list[1] #returns a list contain the first element.
ex_list[[1]] #returns the first element of the list, in this case, a vector
example_data = data.frame(x = c(1, 3, 5, 7, 9, 1, 3, 5, 7, 9),
y = c(rep("Hello", 9), "Goodbye"),
z = rep(c(TRUE, FALSE), 5))
# 安装包所在的位置的数据
#read csv 是常用的读取data frame 用的
#To look at data in a data.frame, we have two useful commands: head() and str().
#head() 帮助看数据的变量和结构
head(mtcars)
str(mtcars)
#To quickly obtain a vector of the variable names, we use the names() function.
names(mtcars)
#Subsetting data frames can work much like subsetting matrices using square brackets, [ , ]
mtcars[mtcars$mpg > 20, c("cyl", "disp", "wt")] #多个条件并列
library(ggplot2)
mpg$cty
table(mpg$drv)
# output the observation numbers of each species
table(mpg$drv)/nrow(mpg)
#output the percent of each category; nrow is the sum of obs
layout(matrix(c(1,2,3,4),nr=2,byrow=T))
hist(mpg$cty,
xlab   = "Miles Per Gallon (City)",
main   = "Histogram of MPG (City)", # main title
breaks = 12,   # how many breaks?
col    = "blue",
border = "black")
barplot(table(mpg$drv),
xlab   = "Drivetrain (f = FWD, r = RWD, 4 = 4WD)",
ylab   = "Frequency",
main   = "Drivetrains",
col    = "blue",
border = "black")
#However, more often we will use boxplots to compare a numerical variable
#for different values of a categorical variable.
boxplot(hwy ~ drv, data = mpg,
xlab   = "Drivetrain (f = FWD, r = RWD, 4 = 4WD)",
ylab   = "Miles Per Gallon (Highway)",
main   = "MPG (Highway) vs Drivetrain",
pch    = 20,
cex    = .5,
col    = "blue",
border = "black") #y~x
plot(hwy ~ displ, data = mpg,
xlab = "Engine Displacement (in Liters)",
ylab = "Miles Per Gallon (Highway)",
main = "MPG (Highway) vs Engine Displacement",
pch  = 20, # 点的形状
cex  = .5, # 越小点和文字越小
col  = "blue")
# plot draws the scatter plots with y against x
ggplot(data = mpg, aes(x=displ,y=hwy)) +   # ggplot() makes base plot
geom_point(color="blue",size=2) +     # how to show x and y? #geom_boxplot
ylab("Miles Per Gallon (Highway)") +  # name of y axis
xlab("Engine Displacement (in Liters)") + # x axis
theme_bw() +    # change the background
geom_smooth(method = "loess",se=TRUE)+
ggtitle("MPG (Highway) vs Engine Displacement")   # add a title
library(readr)  # you need `install.packages("readr")` once!
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
#subset
mpg[mpg$hwy>35,c("manufacturer","model","year")]
# another way
subset(mpg, subset = hwy > 35, select = c("manufacturer", "model", "year"))
# another way
library(dplyr)
mpg%>%filter(hwy>35)%>%
select(manufacturer, model, year)
wage.pooled <- plm(lwage~educ+exper+I(exper^2)+
tenure+I(tenure^2)+black+south+union,
model="pooling", data=nlspd)
library(xtable)
data("nls_panel", package="PoEdata")
nlspd <- pdata.frame(nls_panel, index=c("id", "year")) #set time and id
smpl <- nlspd[nlspd$id %in% c(1,2),c(1:6, 14:15)]
tbl <- xtable(smpl)
kable(tbl, digits=4, align="c",
caption="A data sample")
pdim(nlspd) # examine the balance
wage.pooled <- plm(lwage~educ+exper+I(exper^2)+
tenure+I(tenure^2)+black+south+union,
model="pooling", data=nlspd)
kable(tidy(wage.pooled), digits=3,
caption="Pooled model")
#vcov covariance matirx
# type="HC0"  White standard error
tbl <- tidy(coeftest(wage.pooled, vcov=vcovHC(wage.pooled,
type="HC0",cluster="group")))
kable(tbl, digits=5, caption=
"Pooled 'wage' model with cluster robust standard errors")
nls10 <- pdata.frame(nls_panel[nls_panel$id %in% 1:10,]) # set panel data
wage.fixed <- lm(lwage~exper+I(exper^2)+
tenure+I(tenure^2)+union+factor(id),
data=nls10)
kable(tidy(wage.fixed), digits=3,
caption="Fixed effects in a subsample")
wage.within <- plm(lwage~exper+I(exper^2)+
tenure+I(tenure^2)+south+union,
data=nlspd,
model="within")
tbl <- tidy(wage.within)
kable(tbl, digits=3, caption=
"Fixed effects using 'within' with full sample")
kable(tidy(pFtest(wage.within, wage.pooled)), caption=
"Fixed effects test: Ho:'No fixed effects'")
wageReTest <- plmtest(wage.pooled, effect="individual")
kable(tidy(wageReTest), caption=
"A random effects test for the wage equation")
wage.random <- plm(lwage~educ+exper+I(exper^2)+
tenure+I(tenure^2)+black+south+union,
data=nlspd, random.method="swar",
model="random")
kable(tidy(wage.random), digits=4, caption=
"The random effects results for the wage equation")
kable(tidy(phtest(wage.within, wage.random)), caption=
"Hausman endogeneity test for the random effects wage model")
install.packages("reader")
library(readr)  # you need `install.packages("readr")` once!
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
#subset
mpg[mpg$hwy>35,c("manufacturer","model","year")]
# another way
subset(mpg, subset = hwy > 35, select = c("manufacturer", "model", "year"))
# another way
library(dplyr)
mpg%>%filter(hwy>35)%>%
select(manufacturer, model, year)
blogdown:::preview_site()
